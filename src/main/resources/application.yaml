# ===============================================
# WEB Configurations
# ===============================================
spring:
  main:
    allow-bean-definition-overriding: true
  server:
    port: 8080
  shell:
    interactive:
      enabled: true
  devtools:
    restart:
      poll-interval: 2s
      quiet-period: 1s
      enabled: true
      trigger-file: .reloadTrigger
  datasource:
    properties:
      oracle.jdbc.timezoneAsRegion: false
      oracle.jdbc.mapDateToTimestamp: false
    url: jdbc:oracle:thin:@//localhost:1521/AUTHIDCOREDEV
    username: authid_core_app
    password: authid_core_app202507130433
    driver-class-name: oracle.jdbc.OracleDriver
    type: oracle.ucp.jdbc.PoolDataSource
    oracle.ucp:
      connection-pool-name: connectionPoolName1
      initial-pool-size: 1
      min-pool-size: 1
      max-pool-size: 2
      connection-factory-class-name: oracle.jdbc.pool.OracleConnectionPoolDataSource
  application:
    name: io.authid.core
  cache:
    driver: file
  docker:
    compose:
      enabled: false
#  autoconfigure:
#    exclude: org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration
  jpa:
    show-sql: true
    properties:
      hibernate:
        archive.autodetection: class
        format_sql: true
        ddl-auto: none
        dialect: org.hibernate.dialect.OracleDialect
        hql:
          bulk_id_strategy: org.hibernate.hql.spi.id.inline.InlineIdsSubSelectValueListBulkIdStrategy
        session:
          events:
            auto_enable_filters: false
        jdbc.time_zone: UTC

  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml

  # Konfigurasi inti Spring Batch
  batch:
    job:
      # Pastikan job di-enable
      enabled: true
    # Mengarahkan Spring Batch untuk menggunakan skema Oracle
    platform: oracle
    jdbc:
      # Inisialisasi skema (tabel BATCH_*) saat aplikasi pertama kali jalan.
      # Gunakan 'NEVER' di production dan jalankan skrip DDL manual sekali.
      initialize-schema: NEVER

batch:
  sync:
    max-threshold: 100

logging:
  pattern:
    console: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} - %logger{0} - %msg%n"
    file: "[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} - %logger{0} - %msg%n"

  # FILE ROTATION (LOGBACK SPECIFIC)
  logback:
    rollingpolicy:
      file-name: "logs/application.log"
      file-name-pattern: "logs/archived/application-%d{yyyy-MM-dd}.%i.log.gz"
      max-file-size: 10MB
      max-history: 14
      total-size-cap: 200MB
      clean-history-on-start: true

  # LOG LEVELS
  level:
    org.hibernate.boot.model.source.internal.annotations: DEBUG
    org.hibernate.jpa.internal.util.LogHelper: DEBUG
    root: INFO
    org.springframework.web: WARN
    io.authid: INFO

---
# ===============================================
# CLI Configurations
# ===============================================
spring:
  config:
    activate:
      on-profile: cli
  main:
    banner-mode: "off"
logging:
  level:
    org.hibernate.boot.model.source.internal.annotations: WARN
    org.hibernate.jpa.internal.util.LogHelper: WARN
    root: WARN
    org.springframework.web: WARN
    io.authid: WARN
